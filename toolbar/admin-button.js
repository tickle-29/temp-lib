"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AdminButton=void 0;const react_1=__importDefault(require("react")),mobx_react_lite_1=require("mobx-react-lite"),core_1=require("@blueprintjs/core"),popover2_1=require("@blueprintjs/popover2"),core_2=require("@blueprintjs/core"),l10n_1=require("../utils/l10n");exports.AdminButton=(0,mobx_react_lite_1.observer)((({store:e})=>{const t=e.selectedElements.length>0,a=e.selectedElements[0]||{},l=t=>{e.selectedElements.forEach((e=>{e.set(t)}))};return react_1.default.createElement(popover2_1.Popover2,{disabled:!t,minimal:!1,content:react_1.default.createElement("div",{style:{padding:"15px",paddingTop:"25px",width:"220px"}},react_1.default.createElement(core_2.Switch,{checked:a.selectable,label:(0,l10n_1.t)("toolbar.selectable"),onChange:e=>{l({selectable:e.target.checked})},alignIndicator:core_2.Alignment.RIGHT}),react_1.default.createElement(core_2.Switch,{checked:a.draggable,label:(0,l10n_1.t)("toolbar.draggable"),onChange:e=>{l({draggable:e.target.checked})},alignIndicator:core_2.Alignment.RIGHT}),react_1.default.createElement(core_2.Switch,{checked:a.removable,label:(0,l10n_1.t)("toolbar.removable"),onChange:e=>{l({removable:e.target.checked})},alignIndicator:core_2.Alignment.RIGHT}),react_1.default.createElement(core_2.Switch,{checked:a.resizable,label:(0,l10n_1.t)("toolbar.resizable"),onChange:e=>{l({resizable:e.target.checked})},alignIndicator:core_2.Alignment.RIGHT}),react_1.default.createElement(core_2.Switch,{checked:a.contentEditable,label:(0,l10n_1.t)("toolbar.contentEditable"),onChange:e=>{l({contentEditable:e.target.checked})},alignIndicator:core_2.Alignment.RIGHT}),react_1.default.createElement(core_2.Switch,{checked:a.styleEditable,label:(0,l10n_1.t)("toolbar.styleEditable"),onChange:e=>{l({styleEditable:e.target.checked})},alignIndicator:core_2.Alignment.RIGHT}),react_1.default.createElement(core_2.Switch,{checked:a.alwaysOnTop,label:(0,l10n_1.t)("toolbar.alwaysOnTop"),onChange:e=>{l({alwaysOnTop:e.target.checked})},alignIndicator:core_2.Alignment.RIGHT,style:{marginTop:"20px"}}),react_1.default.createElement(core_2.Switch,{checked:a.showInExport,label:(0,l10n_1.t)("toolbar.showInExport"),onChange:e=>{l({showInExport:e.target.checked})},alignIndicator:core_2.Alignment.RIGHT,style:{marginTop:"20px"}})),position:core_1.Position.BOTTOM},react_1.default.createElement(core_1.Button,{icon:"cog",minimal:!0,disabled:!t}))}));