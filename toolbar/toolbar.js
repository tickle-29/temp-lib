"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Toolbar=exports.registerToolbarComponent=void 0;const react_1=__importDefault(require("react")),mobx_react_lite_1=require("mobx-react-lite"),core_1=require("@blueprintjs/core"),styled_1=__importDefault(require("../utils/styled")),history_buttons_1=require("./history-buttons"),text_toolbar_1=require("./text-toolbar"),html_toolbar_1=require("./html-toolbar"),image_toolbar_1=require("./image-toolbar"),svg_toolbar_1=require("./svg-toolbar"),many_toolbar_1=require("./many-toolbar"),download_button_1=require("./download-button"),duplicate_button_1=require("./duplicate-button"),remove_button_1=require("./remove-button"),lock_button_1=require("./lock-button"),position_picker_1=require("./position-picker"),opacity_picker_1=require("./opacity-picker"),admin_button_1=require("./admin-button"),group_button_1=require("./group-button"),flags_1=require("../utils/flags"),ComponentsTypes={text:text_toolbar_1.TextToolbar,image:image_toolbar_1.ImageToolbar,svg:svg_toolbar_1.SvgToolbar,many:many_toolbar_1.ManyToolbar};function registerToolbarComponent(e,t){ComponentsTypes[e]=t}exports.registerToolbarComponent=registerToolbarComponent;const NavbarContainer=(0,styled_1.default)("div")`
  @media screen and (max-width: 500px) {
    max-width: 100vw;
    overflow-x: auto;
    overflow-y: hidden;
  }
`,NavInner=(0,styled_1.default)("div")`
  width: 100%;
  height: 100%;
  @media screen and (max-width: 500px) {
    display: flex;
  }
`;exports.Toolbar=(0,mobx_react_lite_1.observer)((({store:e,downloadButtonEnabled:t,hideTextFontFamily:o,hideTextSpacing:r,hideTextEffects:a,hideImageFlip:i,hideImageEffects:l,hideImageCrop:n,hideImageFit:d,hideImageRemoveBackground:s,hideSvgEffects:u,hidePosition:c,hideOpacity:_,hideDuplicate:m,hideLock:p,hideRemove:b,components:h={}})=>{const f=1===new Set(e.selectedElements.map((e=>e.type))).size,g=1===e.selectedElements.length,v=e.selectedElements[0],y=e.selectedElements.every((e=>e.styleEditable));let E=y&&g&&ComponentsTypes[v.type];f&&"text"===(null==v?void 0:v.type)?E=ComponentsTypes[v.type]:e.selectedElements.length>1&&(E=ComponentsTypes.many),g&&"text"===v.type&&flags_1.flags.htmlRenderEnabled&&(E=html_toolbar_1.HtmlToolbar);const x=g&&v._cropModeEnabled,T=(null==h?void 0:h.ActionControls)||(t?download_button_1.DownloadButton:null),I=(null==h?void 0:h.Position)||position_picker_1.PositionPicker,q=(null==h?void 0:h.Opacity)||opacity_picker_1.OpacityPicker,k=(null==h?void 0:h.Lock)||lock_button_1.LockButton,C=(null==h?void 0:h.Duplicate)||duplicate_button_1.DuplicateButton,w=(null==h?void 0:h.Remove)||remove_button_1.RemoveButton,F=(null==h?void 0:h.Group)||group_button_1.GroupButton,B=(null==h?void 0:h.History)||history_buttons_1.HistoryButtons,D=[o,r,a,i,l,n,d,s,u,c,_,m,p,b],P=["hideTextFontFamily","hideTextSpacing","hideTextEffects","hideImageFlip","hideImageEffects","hideImageCrop","hideImageFit","hideImageRemoveBackground","hideSvgEffects","hidePosition","hideOpacity","hideDuplicate","hideLock","hideRemove"];return react_1.default.useEffect((()=>{const e=[];D.forEach(((t,o)=>{void 0!==t&&e.push(o)})),e.length>0&&console.warn(`Toolbar props ${e.map((e=>P[e])).join(", ")} are deprecated. Please use components API instead instead. See https://polotno.com/docs/toolbar`)}),D),react_1.default.createElement(NavbarContainer,{className:"bp4-navbar"},react_1.default.createElement(NavInner,null,!x&&react_1.default.createElement(B,{store:e}),E&&y&&react_1.default.createElement(E,{store:e,hideTextFontFamily:o,hideTextSpacing:r,hideTextEffects:a,hideImageFlip:i,hideImageEffects:l,hideImageCrop:n,hideImageFit:d,hideSvgEffects:u,hideImageRemoveBackground:s,components:h}),!x&&react_1.default.createElement(core_1.Navbar.Group,{align:core_1.Alignment.RIGHT},"admin"===e.role&&react_1.default.createElement(admin_button_1.AdminButton,{store:e}),react_1.default.createElement(F,{store:e}),!c&&react_1.default.createElement(I,{store:e}),!_&&y&&react_1.default.createElement(q,{store:e}),!p&&react_1.default.createElement(k,{store:e}),!m&&react_1.default.createElement(C,{store:e}),!b&&react_1.default.createElement(w,{store:e}),T&&react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement(core_1.Divider,{style:{height:"100%",margin:"0 15px"}}),react_1.default.createElement(T,{store:e})))))})),exports.default=exports.Toolbar;